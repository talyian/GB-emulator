#include "base.hpp"
#include "wasm_host.hpp"

struct InstructionDecoder {
  u8 * buf;
  u32 buflen;
  u32 pc;
  bool error = 0;
  InstructionDecoder(u8 * buf, u32 len, u32 pos): buf(buf), buflen(len), pc(pos) { }
  void EOF() { log(__FUNCTION__); error = 1; }
  u16 IMM16() { u16 v = buf[pc++]; v = v + 256 * buf[pc++]; return v; }
  u8 Imm8() { return buf[pc++]; }
  void decode() {
    if (pc >= buflen) return EOF();
    _log((u16)pc);
    u16 op = buf[pc++];
    if (op == 0xcb) op = 0x100 + buf[pc++];
    switch(op) {
    case 0x31: log("LD", "SP", IMM16()); break;
    // case 0x0: OP(NOP(),1,4,'----');
    // case 0x1: OP(LD(BC,U16),3,12,'----');
    // case 0x2: OP(LD(Load(BC),A),1,8,'----');
    // case 0x3: OP(INC(BC),1,8,'----');
    // case 0x4: OP(INC(B),1,4,'Z0H-');
    // case 0x5: OP(DEC(B),1,4,'Z1H-');
    // case 0x6: OP(LD(B,U8),2,8,'----');
    // case 0x7: OP_RAW({ii.RLC(A);registers.setFZ(0);},1,4,'000C');
    // case 0x8: OP(LD(Load16(U16),SP),3,20,'----');
    // case 0x9: OP(ADD(HL,BC),1,8,'-0HC');
    // case 0xA: OP(LD(A,Load(BC)),1,8,'----');
    // case 0xB: OP(DEC(BC),1,8,'----');
    case 0xC: log("INC", "C"); break; // OP(INC(C),1,4,'Z0H-');
    case 0xD: log("DEC", "C"); break; // OP(DEC(C),1,4,'Z1H-');
    case 0xE: log("LD", "C", Imm8()); break; // OP(LD(C,U8),2,8,'----');
    // case 0xF: OP_RAW({ii.RRC(A);registers.setFZ(0);},1,4,'000C');
    // case 0x10: OP(STOP(),2,4,'----');
    // case 0x11: OP(LD(DE,U16),3,12,'----');
    // case 0x12: OP(LD(Load(DE),A),1,8,'----');
    // case 0x13: OP(INC(DE),1,8,'----');
    // case 0x14: OP(INC(D),1,4,'Z0H-');
    // case 0x15: OP(DEC(D),1,4,'Z1H-');
    // case 0x16: OP(LD(D,U8),2,8,'----');
    // case 0x17: OP_RAW({ii.RL(A);registers.setFZ(0);},1,4,'000C');
    // case 0x18: OP(JR(CT,I8),2,12,'----');
    // case 0x19: OP(ADD(HL,DE),1,8,'-0HC');
    // case 0x1A: OP(LD(A,Load(DE)),1,8,'----');
    // case 0x1B: OP(DEC(DE),1,8,'----');
    // case 0x1C: OP(INC(E),1,4,'Z0H-');
    // case 0x1D: OP(DEC(E),1,4,'Z1H-');
    // case 0x1E: OP(LD(E,U8),2,8,'----');
    // case 0x1F: OP_RAW({ii.RR(A);registers.setFZ(0);},1,4,'000C');
    case 0x20: log("JR", "CNZ", Imm8()); break; // OP(JR(CNZ,I8),2,12/8,'----');
    case 0x21: log("LD", "HL", IMM16()); break; // OP(LD(HL,U16),3,12,'----');
    // case 0x22: OP_RAW({ii.LD(Load(HL),A);ii.INC(HL);},1,8,'----');
    // case 0x23: OP(INC(HL),1,8,'----');
    // case 0x24: OP(INC(H),1,4,'Z0H-');
    // case 0x25: OP(DEC(H),1,4,'Z1H-');
    // case 0x26: OP(LD(H,U8),2,8,'----');
    // case 0x27: OP(DAA(),1,4,'Z-0C');
    // case 0x28: OP(JR(CZ,I8),2,12/8,'----');
    // case 0x29: OP(ADD(HL,HL),1,8,'-0HC');
    // case 0x2A: OP_RAW({ii.LD(A,Load(HL));ii.INC(HL);},1,8,'----');
    // case 0x2B: OP(DEC(HL),1,8,'----');
    // case 0x2C: OP(INC(L),1,4,'Z0H-');
    // case 0x2D: OP(DEC(L),1,4,'Z1H-');
    // case 0x2E: OP(LD(L,U8),2,8,'----');
    // case 0x2F: OP(CPL(),1,4,'-11-');
    // case 0x30: OP(JR(CNC,I8),2,12/8,'----');
    // case 0x31: log("LD", "S"P, "U16"); break;
    case 0x32: log("LD", "HL-", "A"); break; // OP_RAW({ii.LD(Load(HL),A);ii.DEC(HL);},1,8,'----');
    // case 0x33: OP(INC(SP),1,8,'----');
    // case 0x34: OP(INC(Load(HL)),1,12,'Z0H-');
    // case 0x35: OP(DEC(Load(HL)),1,12,'Z1H-');
    // case 0x36: OP(LD(Load(HL),U8),2,12,'----');
    // case 0x37: OP(SCF(),1,4,'-001');
    // case 0x38: OP(JR(CC,I8),2,12/8,'----');
    // case 0x39: OP(ADD(HL,SP),1,8,'-0HC');
    // case 0x3A: OP_RAW({ii.LD(A,Load(HL));ii.DEC(HL);}/*LD(A,Load(HLDEC))*/,1,8,'----');
    // case 0x3B: OP(DEC(SP),1,8,'----');
    // case 0x3C: OP(INC(A),1,4,'Z0H-');
    // case 0x3D: OP(DEC(A),1,4,'Z1H-');
    case 0x3E: log("LD", "A", Imm8()); break; // OP(LD(A,U8),2,8,'----');
    // case 0x3F: OP(CCF(),1,4,'-00C');
    // case 0x40: OP(LD(B,B),1,4,'----');
    // case 0x41: OP(LD(B,C),1,4,'----');
    // case 0x42: OP(LD(B,D),1,4,'----');
    // case 0x43: OP(LD(B,E),1,4,'----');
    // case 0x44: OP(LD(B,H),1,4,'----');
    // case 0x45: OP(LD(B,L),1,4,'----');
    // case 0x46: OP(LD(B,Load(HL)),1,8,'----');
    // case 0x47: OP(LD(B,A),1,4,'----');
    // case 0x48: OP(LD(C,B),1,4,'----');
    // case 0x49: OP(LD(C,C),1,4,'----');
    // case 0x4A: OP(LD(C,D),1,4,'----');
    // case 0x4B: OP(LD(C,E),1,4,'----');
    // case 0x4C: OP(LD(C,H),1,4,'----');
    // case 0x4D: OP(LD(C,L),1,4,'----');
    // case 0x4E: OP(LD(C,Load(HL)),1,8,'----');
    // case 0x4F: OP(LD(C,A),1,4,'----');
    // case 0x50: OP(LD(D,B),1,4,'----');
    // case 0x51: OP(LD(D,C),1,4,'----');
    // case 0x52: OP(LD(D,D),1,4,'----');
    // case 0x53: OP(LD(D,E),1,4,'----');
    // case 0x54: OP(LD(D,H),1,4,'----');
    // case 0x55: OP(LD(D,L),1,4,'----');
    // case 0x56: OP(LD(D,Load(HL)),1,8,'----');
    // case 0x57: OP(LD(D,A),1,4,'----');
    // case 0x58: OP(LD(E,B),1,4,'----');
    // case 0x59: OP(LD(E,C),1,4,'----');
    // case 0x5A: OP(LD(E,D),1,4,'----');
    // case 0x5B: OP(LD(E,E),1,4,'----');
    // case 0x5C: OP(LD(E,H),1,4,'----');
    // case 0x5D: OP(LD(E,L),1,4,'----');
    // case 0x5E: OP(LD(E,Load(HL)),1,8,'----');
    // case 0x5F: OP(LD(E,A),1,4,'----');
    // case 0x60: OP(LD(H,B),1,4,'----');
    // case 0x61: OP(LD(H,C),1,4,'----');
    // case 0x62: OP(LD(H,D),1,4,'----');
    // case 0x63: OP(LD(H,E),1,4,'----');
    // case 0x64: OP(LD(H,H),1,4,'----');
    // case 0x65: OP(LD(H,L),1,4,'----');
    // case 0x66: OP(LD(H,Load(HL)),1,8,'----');
    // case 0x67: OP(LD(H,A),1,4,'----');
    // case 0x68: OP(LD(L,B),1,4,'----');
    // case 0x69: OP(LD(L,C),1,4,'----');
    // case 0x6A: OP(LD(L,D),1,4,'----');
    // case 0x6B: OP(LD(L,E),1,4,'----');
    // case 0x6C: OP(LD(L,H),1,4,'----');
    // case 0x6D: OP(LD(L,L),1,4,'----');
    // case 0x6E: OP(LD(L,Load(HL)),1,8,'----');
    // case 0x6F: OP(LD(L,A),1,4,'----');
    // case 0x70: OP(LD(Load(HL),B),1,8,'----');
    // case 0x71: OP(LD(Load(HL),C),1,8,'----');
    // case 0x72: OP(LD(Load(HL),D),1,8,'----');
    // case 0x73: OP(LD(Load(HL),E),1,8,'----');
    // case 0x74: OP(LD(Load(HL),H),1,8,'----');
    // case 0x75: OP(LD(Load(HL),L),1,8,'----');
    // case 0x76: OP(HALT(),1,4,'----');
    // case 0x77: OP(LD(Load(HL),A),1,8,'----');
    // case 0x78: OP(LD(A,B),1,4,'----');
    // case 0x79: OP(LD(A,C),1,4,'----');
    // case 0x7A: OP(LD(A,D),1,4,'----');
    // case 0x7B: OP(LD(A,E),1,4,'----');
    // case 0x7C: OP(LD(A,H),1,4,'----');
    // case 0x7D: OP(LD(A,L),1,4,'----');
    // case 0x7E: OP(LD(A,Load(HL)),1,8,'----');
    // case 0x7F: OP(LD(A,A),1,4,'----');
    // case 0x80: OP(ADD(A,B),1,4,'Z0HC');
    // case 0x81: OP(ADD(A,C),1,4,'Z0HC');
    // case 0x82: OP(ADD(A,D),1,4,'Z0HC');
    // case 0x83: OP(ADD(A,E),1,4,'Z0HC');
    // case 0x84: OP(ADD(A,H),1,4,'Z0HC');
    // case 0x85: OP(ADD(A,L),1,4,'Z0HC');
    // case 0x86: OP(ADD(A,Load(HL)),1,8,'Z0HC');
    // case 0x87: OP(ADD(A,A),1,4,'Z0HC');
    // case 0x88: OP(ADC(A,B),1,4,'Z0HC');
    // case 0x89: OP(ADC(A,C),1,4,'Z0HC');
    // case 0x8A: OP(ADC(A,D),1,4,'Z0HC');
    // case 0x8B: OP(ADC(A,E),1,4,'Z0HC');
    // case 0x8C: OP(ADC(A,H),1,4,'Z0HC');
    // case 0x8D: OP(ADC(A,L),1,4,'Z0HC');
    // case 0x8E: OP(ADC(A,Load(HL)),1,8,'Z0HC');
    // case 0x8F: OP(ADC(A,A),1,4,'Z0HC');
    // case 0x90: OP(SUB(B),1,4,'Z1HC');
    // case 0x91: OP(SUB(C),1,4,'Z1HC');
    // case 0x92: OP(SUB(D),1,4,'Z1HC');
    // case 0x93: OP(SUB(E),1,4,'Z1HC');
    // case 0x94: OP(SUB(H),1,4,'Z1HC');
    // case 0x95: OP(SUB(L),1,4,'Z1HC');
    // case 0x96: OP(SUB(Load(HL)),1,8,'Z1HC');
    // case 0x97: OP(SUB(A),1,4,'Z1HC');
    // case 0x98: OP(SBC(B),1,4,'Z1HC');
    // case 0x99: OP(SBC(C),1,4,'Z1HC');
    // case 0x9A: OP(SBC(D),1,4,'Z1HC');
    // case 0x9B: OP(SBC(E),1,4,'Z1HC');
    // case 0x9C: OP(SBC(H),1,4,'Z1HC');
    // case 0x9D: OP(SBC(L),1,4,'Z1HC');
    // case 0x9E: OP(SBC(Load(HL)),1,8,'Z1HC');
    // case 0x9F: OP(SBC(A),1,4,'Z1HC');
    // case 0xA0: OP(AND(B),1,4,'Z010');
    // case 0xA1: OP(AND(C),1,4,'Z010');
    // case 0xA2: OP(AND(D),1,4,'Z010');
    // case 0xA3: OP(AND(E),1,4,'Z010');
    // case 0xA4: OP(AND(H),1,4,'Z010');
    // case 0xA5: OP(AND(L),1,4,'Z010');
    // case 0xA6: OP(AND(Load(HL)),1,8,'Z010');
    // case 0xA7: OP(AND(A),1,4,'Z010');
    // case 0xA8: OP(XOR(B),1,4,'Z000');
    // case 0xA9: OP(XOR(C),1,4,'Z000');
    // case 0xAA: OP(XOR(D),1,4,'Z000');
    // case 0xAB: OP(XOR(E),1,4,'Z000');
    // case 0xAC: OP(XOR(H),1,4,'Z000');
    // case 0xAD: OP(XOR(L),1,4,'Z000');
    // case 0xAE: OP(XOR(Load(HL)),1,8,'Z000');
    case 0xAF: log("XOR", "A"); break; //OP(XOR(A),1,4,'Z000');
    // case 0xB0: OP(OR(B),1,4,'Z000');
    // case 0xB1: OP(OR(C),1,4,'Z000');
    // case 0xB2: OP(OR(D),1,4,'Z000');
    // case 0xB3: OP(OR(E),1,4,'Z000');
    // case 0xB4: OP(OR(H),1,4,'Z000');
    // case 0xB5: OP(OR(L),1,4,'Z000');
    // case 0xB6: OP(OR(Load(HL)),1,8,'Z000');
    // case 0xB7: OP(OR(A),1,4,'Z000');
    // case 0xB8: OP(CP(B),1,4,'Z1HC');
    // case 0xB9: OP(CP(C),1,4,'Z1HC');
    // case 0xBA: OP(CP(D),1,4,'Z1HC');
    // case 0xBB: OP(CP(E),1,4,'Z1HC');
    // case 0xBC: OP(CP(H),1,4,'Z1HC');
    // case 0xBD: OP(CP(L),1,4,'Z1HC');
    // case 0xBE: OP(CP(Load(HL)),1,8,'Z1HC');
    // case 0xBF: OP(CP(A),1,4,'Z1HC');
    // case 0xC0: OP(RET(CNZ),1,20/8,'----');
    // case 0xC1: OP(POP(BC),1,12,'----');
    // case 0xC2: OP(JP(CNZ,U16),3,16/12,'----');
    // case 0xC3: OP(JP(CT,U16),3,16,'----');
    // case 0xC4: OP(CALL(CNZ,U16),3,24/12,'----');
    // case 0xC5: OP(PUSH(BC),1,16,'----');
    // case 0xC6: OP(ADD(A,U8),2,8,'Z0HC');
    // case 0xC7: OP(RST(0x00),1,16,'----');
    // case 0xC8: OP(RET(CZ),1,20/8,'----');
    // case 0xC9: OP(RET(CT),1,16,'----');
    // case 0xCA: OP(JP(CZ,U16),3,16/12,'----');
    // case 0xCC: OP(CALL(CZ,U16),3,24/12,'----');
    // case 0xCD: OP(CALL(CT,U16),3,24,'----');
    // case 0xCE: OP(ADC(A,U8),2,8,'Z0HC');
    // case 0xCF: OP(RST(0x08),1,16,'----');
    // case 0xD0: OP(RET(CNC),1,20/8,'----');
    // case 0xD1: OP(POP(DE),1,12,'----');
    // case 0xD2: OP(JP(CNC,U16),3,16/12,'----');
    // case 0xD4: OP(CALL(CNC,U16),3,24/12,'----');
    // case 0xD5: OP(PUSH(DE),1,16,'----');
    // case 0xD6: OP(SUB(U8),2,8,'Z1HC');
    // case 0xD7: OP(RST(0x10),1,16,'----');
    // case 0xD8: OP(RET(CC),1,20/8,'----');
    // case 0xD9: OP_RAW({ii.RET(CT);ii.EI();},1,16,'----');
    // case 0xDA: OP(JP(CC,U16),3,16/12,'----');
    // case 0xDC: OP(CALL(CC,U16),3,24/12,'----');
    // case 0xDE: OP(SBC(U8),2,8,'Z1HC');
    // case 0xDF: OP(RST(0x18),1,16,'----');
    // case 0xE0: OP(LD(IO(U8),A),2,12,'----');
    // case 0xE1: OP(POP(HL),1,12,'----');
    case 0xE2: log("LD", "IO(C)", "A"); break; //OP(LD(IO(C),A),2,8,'----');
    // case 0xE5: OP(PUSH(HL),1,16,'----');
    // case 0xE6: OP(AND(U8),2,8,'Z010');
    // case 0xE7: OP(RST(0x20),1,16,'----');
    // case 0xE8: OP(ADD(SP,I8),2,16,'00HC');
    // case 0xE9: OP(JP(CT,(HL)),1,4,'----');
    // case 0xEA: OP(LD(Load(U16),A),3,16,'----');
    // case 0xEE: OP(XOR(U8),2,8,'Z000');
    // case 0xEF: OP(RST(0x28),1,16,'----');
    // case 0xF0: OP(LD(A,IO(U8)),2,12,'----');
    // case 0xF1: OP(POP(AF),1,12,'ZNHC');
    // case 0xF2: OP(LD(A,IO(C)),2,8,'----');
    // case 0xF3: OP(DI(),1,4,'----');
    // case 0xF5: OP(PUSH(AF),1,16,'----');
    // case 0xF6: OP(OR(U8),2,8,'Z000');
    // case 0xF7: OP(RST(0x30),1,16,'----');
    // case 0xF8: OP(LDHLSP(I8),2,12,'00HC');
    // case 0xF9: OP(LD(SP,HL),1,8,'----');
    // case 0xFA: OP(LD(A,Load(U16)),3,16,'----');
    // case 0xFB: OP(EI(),1,4,'----');
    // case 0xFE: log("CP", "U8"); break; 
    // case 0xFF: log("RST", (u8)0x38); break;
    // case 0x100: OP(RLC(B),2,8,'Z00C');
    // case 0x101: OP(RLC(C),2,8,'Z00C');
    // case 0x102: OP(RLC(D),2,8,'Z00C');
    // case 0x103: OP(RLC(E),2,8,'Z00C');
    // case 0x104: OP(RLC(H),2,8,'Z00C');
    // case 0x105: OP(RLC(L),2,8,'Z00C');
    // case 0x106: OP(RLC(Load(HL)),2,16,'Z00C');
    // case 0x107: OP(RLC(A),2,8,'Z00C');
    // case 0x108: OP(RRC(B),2,8,'Z00C');
    // case 0x109: OP(RRC(C),2,8,'Z00C');
    // case 0x10A: OP(RRC(D),2,8,'Z00C');
    // case 0x10B: OP(RRC(E),2,8,'Z00C');
    // case 0x10C: OP(RRC(H),2,8,'Z00C');
    // case 0x10D: OP(RRC(L),2,8,'Z00C');
    // case 0x10E: OP(RRC(Load(HL)),2,16,'Z00C');
    // case 0x10F: OP(RRC(A),2,8,'Z00C');
    // case 0x110: OP(RL(B),2,8,'Z00C');
    // case 0x111: OP(RL(C),2,8,'Z00C');
    // case 0x112: OP(RL(D),2,8,'Z00C');
    // case 0x113: OP(RL(E),2,8,'Z00C');
    // case 0x114: OP(RL(H),2,8,'Z00C');
    // case 0x115: OP(RL(L),2,8,'Z00C');
    // case 0x116: OP(RL(Load(HL)),2,16,'Z00C');
    // case 0x117: OP(RL(A),2,8,'Z00C');
    // case 0x118: OP(RR(B),2,8,'Z00C');
    // case 0x119: OP(RR(C),2,8,'Z00C');
    // case 0x11A: OP(RR(D),2,8,'Z00C');
    // case 0x11B: OP(RR(E),2,8,'Z00C');
    // case 0x11C: OP(RR(H),2,8,'Z00C');
    // case 0x11D: OP(RR(L),2,8,'Z00C');
    // case 0x11E: OP(RR(Load(HL)),2,16,'Z00C');
    // case 0x11F: OP(RR(A),2,8,'Z00C');
    // case 0x120: OP(SLA(B),2,8,'Z00C');
    // case 0x121: OP(SLA(C),2,8,'Z00C');
    // case 0x122: OP(SLA(D),2,8,'Z00C');
    // case 0x123: OP(SLA(E),2,8,'Z00C');
    // case 0x124: OP(SLA(H),2,8,'Z00C');
    // case 0x125: OP(SLA(L),2,8,'Z00C');
    // case 0x126: OP(SLA(Load(HL)),2,16,'Z00C');
    // case 0x127: OP(SLA(A),2,8,'Z00C');
    // case 0x128: OP(SRA(B),2,8,'Z000');
    // case 0x129: OP(SRA(C),2,8,'Z000');
    // case 0x12A: OP(SRA(D),2,8,'Z000');
    // case 0x12B: OP(SRA(E),2,8,'Z000');
    // case 0x12C: OP(SRA(H),2,8,'Z000');
    // case 0x12D: OP(SRA(L),2,8,'Z000');
    // case 0x12E: OP(SRA(Load(HL)),2,16,'Z000');
    // case 0x12F: OP(SRA(A),2,8,'Z000');
    // case 0x130: OP(SWAP(B),2,8,'Z000');
    // case 0x131: OP(SWAP(C),2,8,'Z000');
    // case 0x132: OP(SWAP(D),2,8,'Z000');
    // case 0x133: OP(SWAP(E),2,8,'Z000');
    // case 0x134: OP(SWAP(H),2,8,'Z000');
    // case 0x135: OP(SWAP(L),2,8,'Z000');
    // case 0x136: OP(SWAP(Load(HL)),2,16,'Z000');
    // case 0x137: OP(SWAP(A),2,8,'Z000');
    // case 0x138: OP(SRL(B),2,8,'Z00C');
    // case 0x139: OP(SRL(C),2,8,'Z00C');
    // case 0x13A: OP(SRL(D),2,8,'Z00C');
    // case 0x13B: OP(SRL(E),2,8,'Z00C');
    // case 0x13C: OP(SRL(H),2,8,'Z00C');
    // case 0x13D: OP(SRL(L),2,8,'Z00C');
    // case 0x13E: OP(SRL(Load(HL)),2,16,'Z00C');
    // case 0x13F: OP(SRL(A),2,8,'Z00C');
    // case 0x140: OP(BIT(0,B),2,8,'Z01-');
    // case 0x141: OP(BIT(0,C),2,8,'Z01-');
    // case 0x142: OP(BIT(0,D),2,8,'Z01-');
    // case 0x143: OP(BIT(0,E),2,8,'Z01-');
    // case 0x144: OP(BIT(0,H),2,8,'Z01-');
    // case 0x145: OP(BIT(0,L),2,8,'Z01-');
    // case 0x146: OP(BIT(0,Load(HL)),2,16,'Z01-');
    // case 0x147: OP(BIT(0,A),2,8,'Z01-');
    // case 0x148: OP(BIT(1,B),2,8,'Z01-');
    // case 0x149: OP(BIT(1,C),2,8,'Z01-');
    // case 0x14A: OP(BIT(1,D),2,8,'Z01-');
    // case 0x14B: OP(BIT(1,E),2,8,'Z01-');
    // case 0x14C: OP(BIT(1,H),2,8,'Z01-');
    // case 0x14D: OP(BIT(1,L),2,8,'Z01-');
    // case 0x14E: OP(BIT(1,Load(HL)),2,16,'Z01-');
    // case 0x14F: OP(BIT(1,A),2,8,'Z01-');
    // case 0x150: OP(BIT(2,B),2,8,'Z01-');
    // case 0x151: OP(BIT(2,C),2,8,'Z01-');
    // case 0x152: OP(BIT(2,D),2,8,'Z01-');
    // case 0x153: OP(BIT(2,E),2,8,'Z01-');
    // case 0x154: OP(BIT(2,H),2,8,'Z01-');
    // case 0x155: OP(BIT(2,L),2,8,'Z01-');
    // case 0x156: OP(BIT(2,Load(HL)),2,16,'Z01-');
    // case 0x157: OP(BIT(2,A),2,8,'Z01-');
    // case 0x158: OP(BIT(3,B),2,8,'Z01-');
    // case 0x159: OP(BIT(3,C),2,8,'Z01-');
    // case 0x15A: OP(BIT(3,D),2,8,'Z01-');
    // case 0x15B: OP(BIT(3,E),2,8,'Z01-');
    // case 0x15C: OP(BIT(3,H),2,8,'Z01-');
    // case 0x15D: OP(BIT(3,L),2,8,'Z01-');
    // case 0x15E: OP(BIT(3,Load(HL)),2,16,'Z01-');
    // case 0x15F: OP(BIT(3,A),2,8,'Z01-');
    // case 0x160: OP(BIT(4,B),2,8,'Z01-');
    // case 0x161: OP(BIT(4,C),2,8,'Z01-');
    // case 0x162: OP(BIT(4,D),2,8,'Z01-');
    // case 0x163: OP(BIT(4,E),2,8,'Z01-');
    // case 0x164: OP(BIT(4,H),2,8,'Z01-');
    // case 0x165: OP(BIT(4,L),2,8,'Z01-');
    // case 0x166: OP(BIT(4,Load(HL)),2,16,'Z01-');
    // case 0x167: OP(BIT(4,A),2,8,'Z01-');
    // case 0x168: OP(BIT(5,B),2,8,'Z01-');
    // case 0x169: OP(BIT(5,C),2,8,'Z01-');
    // case 0x16A: OP(BIT(5,D),2,8,'Z01-');
    // case 0x16B: OP(BIT(5,E),2,8,'Z01-');
    // case 0x16C: OP(BIT(5,H),2,8,'Z01-');
    // case 0x16D: OP(BIT(5,L),2,8,'Z01-');
    // case 0x16E: OP(BIT(5,Load(HL)),2,16,'Z01-');
    // case 0x16F: OP(BIT(5,A),2,8,'Z01-');
    // case 0x170: OP(BIT(6,B),2,8,'Z01-');
    // case 0x171: OP(BIT(6,C),2,8,'Z01-');
    // case 0x172: OP(BIT(6,D),2,8,'Z01-');
    // case 0x173: OP(BIT(6,E),2,8,'Z01-');
    // case 0x174: OP(BIT(6,H),2,8,'Z01-');
    // case 0x175: OP(BIT(6,L),2,8,'Z01-');
    // case 0x176: OP(BIT(6,Load(HL)),2,16,'Z01-');
    // case 0x177: OP(BIT(6,A),2,8,'Z01-');
    // case 0x178: OP(BIT(7,B),2,8,'Z01-');
    // case 0x179: OP(BIT(7,C),2,8,'Z01-');
    // case 0x17A: OP(BIT(7,D),2,8,'Z01-');
    // case 0x17B: OP(BIT(7,E),2,8,'Z01-');
    case 0x17C: log("GET-BIT", 7, "H"); break; //OP(BIT(7,H),2,8,'Z01-');
    // case 0x17D: OP(BIT(7,L),2,8,'Z01-');
    // case 0x17E: OP(BIT(7,Load(HL)),2,16,'Z01-');
    // case 0x17F: OP(BIT(7,A),2,8,'Z01-');
    // case 0x180: OP(RES(0,B),2,8,'----');
    // case 0x181: OP(RES(0,C),2,8,'----');
    // case 0x182: OP(RES(0,D),2,8,'----');
    // case 0x183: OP(RES(0,E),2,8,'----');
    // case 0x184: OP(RES(0,H),2,8,'----');
    // case 0x185: OP(RES(0,L),2,8,'----');
    // case 0x186: OP(RES(0,Load(HL)),2,16,'----');
    // case 0x187: OP(RES(0,A),2,8,'----');
    // case 0x188: OP(RES(1,B),2,8,'----');
    // case 0x189: OP(RES(1,C),2,8,'----');
    // case 0x18A: OP(RES(1,D),2,8,'----');
    // case 0x18B: OP(RES(1,E),2,8,'----');
    // case 0x18C: OP(RES(1,H),2,8,'----');
    // case 0x18D: OP(RES(1,L),2,8,'----');
    // case 0x18E: OP(RES(1,Load(HL)),2,16,'----');
    // case 0x18F: OP(RES(1,A),2,8,'----');
    // case 0x190: OP(RES(2,B),2,8,'----');
    // case 0x191: OP(RES(2,C),2,8,'----');
    // case 0x192: OP(RES(2,D),2,8,'----');
    // case 0x193: OP(RES(2,E),2,8,'----');
    // case 0x194: OP(RES(2,H),2,8,'----');
    // case 0x195: OP(RES(2,L),2,8,'----');
    // case 0x196: OP(RES(2,Load(HL)),2,16,'----');
    // case 0x197: OP(RES(2,A),2,8,'----');
    // case 0x198: OP(RES(3,B),2,8,'----');
    // case 0x199: OP(RES(3,C),2,8,'----');
    // case 0x19A: OP(RES(3,D),2,8,'----');
    // case 0x19B: OP(RES(3,E),2,8,'----');
    // case 0x19C: OP(RES(3,H),2,8,'----');
    // case 0x19D: OP(RES(3,L),2,8,'----');
    // case 0x19E: OP(RES(3,Load(HL)),2,16,'----');
    // case 0x19F: OP(RES(3,A),2,8,'----');
    // case 0x1A0: OP(RES(4,B),2,8,'----');
    // case 0x1A1: OP(RES(4,C),2,8,'----');
    // case 0x1A2: OP(RES(4,D),2,8,'----');
    // case 0x1A3: OP(RES(4,E),2,8,'----');
    // case 0x1A4: OP(RES(4,H),2,8,'----');
    // case 0x1A5: OP(RES(4,L),2,8,'----');
    // case 0x1A6: OP(RES(4,Load(HL)),2,16,'----');
    // case 0x1A7: OP(RES(4,A),2,8,'----');
    // case 0x1A8: OP(RES(5,B),2,8,'----');
    // case 0x1A9: OP(RES(5,C),2,8,'----');
    // case 0x1AA: OP(RES(5,D),2,8,'----');
    // case 0x1AB: OP(RES(5,E),2,8,'----');
    // case 0x1AC: OP(RES(5,H),2,8,'----');
    // case 0x1AD: OP(RES(5,L),2,8,'----');
    // case 0x1AE: OP(RES(5,Load(HL)),2,16,'----');
    // case 0x1AF: OP(RES(5,A),2,8,'----');
    // case 0x1B0: OP(RES(6,B),2,8,'----');
    // case 0x1B1: OP(RES(6,C),2,8,'----');
    // case 0x1B2: OP(RES(6,D),2,8,'----');
    // case 0x1B3: OP(RES(6,E),2,8,'----');
    // case 0x1B4: OP(RES(6,H),2,8,'----');
    // case 0x1B5: OP(RES(6,L),2,8,'----');
    // case 0x1B6: OP(RES(6,Load(HL)),2,16,'----');
    // case 0x1B7: OP(RES(6,A),2,8,'----');
    // case 0x1B8: OP(RES(7,B),2,8,'----');
    // case 0x1B9: OP(RES(7,C),2,8,'----');
    // case 0x1BA: OP(RES(7,D),2,8,'----');
    // case 0x1BB: OP(RES(7,E),2,8,'----');
    // case 0x1BC: OP(RES(7,H),2,8,'----');
    // case 0x1BD: OP(RES(7,L),2,8,'----');
    // case 0x1BE: OP(RES(7,Load(HL)),2,16,'----');
    // case 0x1BF: OP(RES(7,A),2,8,'----');
    // case 0x1C0: OP(SET(0,B),2,8,'----');
    // case 0x1C1: OP(SET(0,C),2,8,'----');
    // case 0x1C2: OP(SET(0,D),2,8,'----');
    // case 0x1C3: OP(SET(0,E),2,8,'----');
    // case 0x1C4: OP(SET(0,H),2,8,'----');
    // case 0x1C5: OP(SET(0,L),2,8,'----');
    // case 0x1C6: OP(SET(0,Load(HL)),2,16,'----');
    // case 0x1C7: OP(SET(0,A),2,8,'----');
    // case 0x1C8: OP(SET(1,B),2,8,'----');
    // case 0x1C9: OP(SET(1,C),2,8,'----');
    // case 0x1CA: OP(SET(1,D),2,8,'----');
    // case 0x1CB: OP(SET(1,E),2,8,'----');
    // case 0x1CC: OP(SET(1,H),2,8,'----');
    // case 0x1CD: OP(SET(1,L),2,8,'----');
    // case 0x1CE: OP(SET(1,Load(HL)),2,16,'----');
    // case 0x1CF: OP(SET(1,A),2,8,'----');
    // case 0x1D0: OP(SET(2,B),2,8,'----');
    // case 0x1D1: OP(SET(2,C),2,8,'----');
    // case 0x1D2: OP(SET(2,D),2,8,'----');
    // case 0x1D3: OP(SET(2,E),2,8,'----');
    // case 0x1D4: OP(SET(2,H),2,8,'----');
    // case 0x1D5: OP(SET(2,L),2,8,'----');
    // case 0x1D6: OP(SET(2,Load(HL)),2,16,'----');
    // case 0x1D7: OP(SET(2,A),2,8,'----');
    // case 0x1D8: OP(SET(3,B),2,8,'----');
    // case 0x1D9: OP(SET(3,C),2,8,'----');
    // case 0x1DA: OP(SET(3,D),2,8,'----');
    // case 0x1DB: OP(SET(3,E),2,8,'----');
    // case 0x1DC: OP(SET(3,H),2,8,'----');
    // case 0x1DD: OP(SET(3,L),2,8,'----');
    // case 0x1DE: OP(SET(3,Load(HL)),2,16,'----');
    // case 0x1DF: OP(SET(3,A),2,8,'----');
    // case 0x1E0: OP(SET(4,B),2,8,'----');
    // case 0x1E1: OP(SET(4,C),2,8,'----');
    // case 0x1E2: OP(SET(4,D),2,8,'----');
    // case 0x1E3: OP(SET(4,E),2,8,'----');
    // case 0x1E4: OP(SET(4,H),2,8,'----');
    // case 0x1E5: OP(SET(4,L),2,8,'----');
    // case 0x1E6: OP(SET(4,Load(HL)),2,16,'----');
    // case 0x1E7: OP(SET(4,A),2,8,'----');
    // case 0x1E8: OP(SET(5,B),2,8,'----');
    // case 0x1E9: OP(SET(5,C),2,8,'----');
    // case 0x1EA: OP(SET(5,D),2,8,'----');
    // case 0x1EB: OP(SET(5,E),2,8,'----');
    // case 0x1EC: OP(SET(5,H),2,8,'----');
    // case 0x1ED: OP(SET(5,L),2,8,'----');
    // case 0x1EE: OP(SET(5,Load(HL)),2,16,'----');
    // case 0x1EF: OP(SET(5,A),2,8,'----');
    // case 0x1F0: OP(SET(6,B),2,8,'----');
    // case 0x1F1: OP(SET(6,C),2,8,'----');
    // case 0x1F2: OP(SET(6,D),2,8,'----');
    // case 0x1F3: OP(SET(6,E),2,8,'----');
    // case 0x1F4: OP(SET(6,H),2,8,'----');
    // case 0x1F5: OP(SET(6,L),2,8,'----');
    // case 0x1F6: OP(SET(6,Load(HL)),2,16,'----');
    // case 0x1F7: OP(SET(6,A),2,8,'----');
    // case 0x1F8: OP(SET(7,B),2,8,'----');
    // case 0x1F9: OP(SET(7,C),2,8,'----');
    // case 0x1FA: OP(SET(7,D),2,8,'----');
    // case 0x1FB: OP(SET(7,E),2,8,'----');
    // case 0x1FC: OP(SET(7,H),2,8,'----');
    // case 0x1FD: OP(SET(7,L),2,8,'----');
    case 0x1FE: log("SET", 7, "Load(HL)"); break;
    // case 0x1FF: OP(SET(7,A),2,8,'----');
    default:
      log("unknown op", op);
      error = 1;
    }
  }
};
